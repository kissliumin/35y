
## 集群配置
#eureka.client.serviceUrl.defaultZone=http\://eureka1\:8761/eureka/,http\://eureka2\:8762/eureka/
eureka.client.serviceUrl.defaultZone=http\://eureka1\:8761/eureka/
spring.application.name=youbaolian-web


eureka.instance.statusPageUrlPath= /info
eureka.instance.healthCheckUrlPath= /health


# 定义服务续约任务（心跳）的调用间隔，单位：秒
eureka.instance.lease-renewal-interval-in-seconds= 30
# 定义服务失效的时间，单位：秒
eureka.instance.lease-expiration-duration-in-seconds= 90
feign.httpclient.enabled=false
#feign.hystrix.enabled=false
feign.httpclient.connection-timeout=30000
feign.httpclient.connection-timer-repeat=30000
hystrix.command.default.execution.timeout.enabled=false

spring.cloud.loadbalancer.retry.enabled=true
ribbon.ReadTimeout=60000
ribbon.ConnectTimeout=60000
server.port=8088

# zipkin 日志服务
spring.zipkin.base-url=http://localhost:9411/
# 1为100%进入zipkin,默认值为0.1
spring.sleuth.sampler.percentage=1

#spring.thymeleaf.checkTemplateLocation=false
#spring.thymeleaf.content-type: text/html
#spring.thymeleaf.cache: false
#spring.thymeleaf.mode: LEGACYHTML5
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html # ;charset=<encoding> is added

spring.thymeleaf.cache=false
#redis
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=youbaolian.redis.address
#  Redis服务器连接端口
spring.redis.port=6379  
#Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=0
#spring.session.store-type=none
#server.context-path=/youbaolian


upload=C:\\Uploads\\
picAddress=C:\\Image\\Notice\\
partnerFilePath=http://f2.ananyun.net/BakSite/Resources/img/logo/small/
#将页面与jar包分离
view.dir=G:/git-workspance/yiubaolian-release-insurance/youbaolian-ui/templates/
web.pack.env=dev
web.pack.dir=20180726155954
excel_xlsx=G:/git-workspance/yiubaolian-release-insurance/youbaolian-ui/templates/1.xlsx
excel_xls=G:/git-workspance/yiubaolian-release-insurance/youbaolian-ui/templates/2.xls
insCardPaperNoEnable=10000,20290,20483,20493,20495,20496,20515,50517,20521,20547,20550,20552,20553,20554,20556,20557,20558,20559,20560



#============== kafka ===================
#内部发送数据是异步还是同步,sync：同步, 默认,     async异步
producer.type=async
# 指定kafka 代理地址，可以多个

spring.kafka.bootstrap-servers=192.168.0.106:9092
#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=user-log-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer




#kafka.consumer.zookeeper.connect=192.168.0.106:2181
#kafka.consumer.servers=192.168.0.106:9092
#kafka.consumer.enable.auto.commit=true
#kafka.consumer.session.timeout=6000
#kafka.consumer.auto.commit.interval=100
#kafka.consumer.auto.offset.reset=latest
#kafka.consumer.topic=test
#kafka.consumer.group.id=test
#kafka.consumer.concurrency=10
#
#kafka.producer.servers=192.168.0.106:9092
#kafka.producer.retries=0
#kafka.producer.batch.size=4096
#kafka.producer.linger=1
#kafka.producer.buffer.memory=40960
#
#
#
#
#
bootstrap.servers=192.168.0.106:9092
kafka.topics=sharp-acs-settle-notice